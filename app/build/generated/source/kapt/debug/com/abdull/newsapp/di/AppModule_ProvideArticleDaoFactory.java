// Generated by Dagger (https://dagger.dev).
package com.abdull.newsapp.di;

import com.abdull.newsapp.datasource.local.ArticleDao;
import com.abdull.newsapp.datasource.local.ArticleDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideArticleDaoFactory implements Factory<ArticleDao> {
  private final Provider<ArticleDatabase> articleDbProvider;

  public AppModule_ProvideArticleDaoFactory(Provider<ArticleDatabase> articleDbProvider) {
    this.articleDbProvider = articleDbProvider;
  }

  @Override
  public ArticleDao get() {
    return provideArticleDao(articleDbProvider.get());
  }

  public static AppModule_ProvideArticleDaoFactory create(
      Provider<ArticleDatabase> articleDbProvider) {
    return new AppModule_ProvideArticleDaoFactory(articleDbProvider);
  }

  public static ArticleDao provideArticleDao(ArticleDatabase articleDb) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideArticleDao(articleDb));
  }
}
