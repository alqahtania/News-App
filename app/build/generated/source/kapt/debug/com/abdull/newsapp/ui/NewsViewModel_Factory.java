// Generated by Dagger (https://dagger.dev).
package com.abdull.newsapp.ui;

import android.content.Context;
import com.abdull.newsapp.repository.abstraction.NewsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsViewModel_Factory implements Factory<NewsViewModel> {
  private final Provider<Context> applicationProvider;

  private final Provider<NewsRepository> repositoryProvider;

  public NewsViewModel_Factory(Provider<Context> applicationProvider,
      Provider<NewsRepository> repositoryProvider) {
    this.applicationProvider = applicationProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public NewsViewModel get() {
    return newInstance(applicationProvider.get(), repositoryProvider.get());
  }

  public static NewsViewModel_Factory create(Provider<Context> applicationProvider,
      Provider<NewsRepository> repositoryProvider) {
    return new NewsViewModel_Factory(applicationProvider, repositoryProvider);
  }

  public static NewsViewModel newInstance(Context application, NewsRepository repository) {
    return new NewsViewModel(application, repository);
  }
}
