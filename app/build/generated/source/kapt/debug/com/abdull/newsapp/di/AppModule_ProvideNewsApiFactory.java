// Generated by Dagger (https://dagger.dev).
package com.abdull.newsapp.di;

import com.abdull.newsapp.datasource.remote.NewsApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideNewsApiFactory implements Factory<NewsApi> {
  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvideNewsApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public NewsApi get() {
    return provideNewsApi(retrofitProvider.get());
  }

  public static AppModule_ProvideNewsApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvideNewsApiFactory(retrofitProvider);
  }

  public static NewsApi provideNewsApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideNewsApi(retrofit));
  }
}
