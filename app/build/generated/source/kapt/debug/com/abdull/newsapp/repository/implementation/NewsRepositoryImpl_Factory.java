// Generated by Dagger (https://dagger.dev).
package com.abdull.newsapp.repository.implementation;

import com.abdull.newsapp.datasource.local.ArticleDao;
import com.abdull.newsapp.datasource.remote.NewsApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsRepositoryImpl_Factory implements Factory<NewsRepositoryImpl> {
  private final Provider<ArticleDao> daoProvider;

  private final Provider<NewsApi> apiProvider;

  public NewsRepositoryImpl_Factory(Provider<ArticleDao> daoProvider,
      Provider<NewsApi> apiProvider) {
    this.daoProvider = daoProvider;
    this.apiProvider = apiProvider;
  }

  @Override
  public NewsRepositoryImpl get() {
    return newInstance(daoProvider.get(), apiProvider.get());
  }

  public static NewsRepositoryImpl_Factory create(Provider<ArticleDao> daoProvider,
      Provider<NewsApi> apiProvider) {
    return new NewsRepositoryImpl_Factory(daoProvider, apiProvider);
  }

  public static NewsRepositoryImpl newInstance(ArticleDao dao, NewsApi api) {
    return new NewsRepositoryImpl(dao, api);
  }
}
